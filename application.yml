eureka:
  client:
    serviceUrl:
      defaultZone: https://eureka-server-discovery.onrender.com/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    leaseRenewalIntervalInSeconds: 30
    leaseExpirationDurationInSeconds: 90
    preferIpAddress: false
    securePortEnabled: true
    nonSecurePortEnabled: false
    securePort: 443
    instanceId: ${spring.application.name}:${random.uuid}
    statusPageUrl: https://${eureka.instance.hostname}/actuator/info
    healthCheckUrl: https://${eureka.instance.hostname}/actuator/health
    homePageUrl: https://${eureka.instance.hostname}/
    metadataMap:
      instanceId: ${spring.application.name}:${random.uuid}

spring:
  datasource:
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}
    url: ${SPRING_DATASOURCE_URL:postgresql://citythrillsdb_user:YVXb8u1Uj7QP8YDMJdHC8r3Y1nvKYnVz@dpg-ctkvo1tds78s73c328p0-a/citythrillsdb}
    username: ${SPRING_DATASOURCE_USERNAME:citythrillsdb_user}
    password: ${SPRING_DATASOURCE_PASSWORD:YVXb8u1Uj7QP8YDMJdHC8r3Y1nvKYnVz}
  jpa:
    database-platform: ${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false

logging:
  level:
    com.netflix.loadbalancer: DEBUG
    com.netflix.niws.client: DEBUG
    com.netflix.discovery: INFO